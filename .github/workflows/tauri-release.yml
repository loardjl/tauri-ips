name: 'publish'
on:
  push:
    branches:
      - main

jobs:
  publishtauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest, de]

    runs-on: ${{ matrix.platform }}

    outputs:
      releaseId: ${{ steps.tauri.outputs.releaseHtmlUrl }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Export variable (unix)
        if: matrix.platform != 'windows-latest'
        run: echo "TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV
      - name: Export variable (windows)
        if: matrix.platform == 'windows-latest'
        run: echo "TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV
        shell: bash
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: pnpm install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: Arm-Ips-v__VERSION__ # the action automatically replaces __VERSION__ with the app version
          releaseName: 'Arm Ips v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonPreferNsis: true
          includeDebug: false
          includeRelease: true

  update-json:
    runs-on: ubuntu-latest
    needs: publishtauri
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure Git
        run: |
          git config user.name "loardjl"
          git config user.email "loardjl@github.com"
      - name: Create or checkout branch
        run: |
          git checkout "update" || git checkout --orphan "update"
      - name: Remove all files
        run: |
          git rm -rf .
      - name: Fetch JSON file
        env:
          RELEASE_ID: ${{needs.publishtauri.outputs.releaseId}}
        run: |
          echo "$RELEASE_ID"
          RELEASE_TAG=$(basename $RELEASE_ID)
          echo "$RELEASE_TAG"
          RELEASE_URL="https://github.com/loardjl/tauri-ips/releases/download/$RELEASE_TAG/latest.json"
          echo "$RELEASE_URL"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o latest.json -L "$RELEASE_URL"
          cat latest.json
      - name: Commit and push changes
        run: |
          git add latest.json
          git commit -m "Update latest.json"
          git push -u origin update --force
      - name: Upload deb bundle
        uses: actions/upload-artifact@v3
        with:
          name: Debian Bundle
          path: ${{ github.workspace }}/target/release/bundle/deb/tauri_1.4_arm64.deb
